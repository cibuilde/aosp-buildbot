
name: AOSP Build
on:
  push:
    tags:
    - '*'
env:
  branch: 'android-12.0.0_r1'
jobs:

  build_step3:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Call Composite Action bootstrap
      uses: ./.github/actions/bootstrap
      id: bootstrap

    - name: Restore Cache external/rust/crates/syn
      id: external_rust_crates_syn
      uses: actions/cache@v3
      with:
        path: aosp/external/rust/crates/syn
        key: external_rust_crates_syn@${{ env.branch }}
        restore-keys: external_rust_crates_syn@${{ env.branch }}
    - name: Clone project external/rust/crates/syn
      if: steps.external_rust_crates_syn.outputs.cache-hit != 'true'
      run: |
        pushd aosp
        source $GITHUB_WORKSPACE/envsetup.sh
        clone_depth_platform external/rust/crates/syn

    - name: Download Release
      run: |
        source $GITHUB_WORKSPACE/envsetup.sh
        download_release bionic-0 bionic build_step1
        download_release external_scudo-0 external/scudo build_step0
        download_release external_arm-optimized-routines-0 external/arm-optimized-routines build_step0
        download_release external_libcxxabi-0 external/libcxxabi build_step2
        download_release external_rust_crates_proc-macro2-0 external/rust/crates/proc-macro2 build_step1
        download_release external_rust_crates_quote-0 external/rust/crates/quote build_step2
        download_release external_rust_crates_unicode-xid-0 external/rust/crates/unicode-xid build_step0

    - name: Build Step-3
      run: |
        pushd aosp
        export TOP=$(pwd)
        $GITHUB_WORKSPACE/steps/build_step3.sh
        df -h

    - uses: ncipollo/release-action@main
      with:
        name: 'build_step3'
        artifacts: "aosp/external_libcxx-0.tar.xz,aosp/external_rust_crates_syn-0.tar.xz"
        removeArtifacts: true
        allowUpdates: true
