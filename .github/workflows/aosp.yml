name: AOSP Build
on: push
env:
  branch: 'android-12.0.0_r1'
jobs:
  build_step0:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Call Composite Action bootstrap
      uses: ./.github/actions/bootstrap
      id: bootstrap
    - name: Restore Cache external/arm-optimized-routines
      id: external_arm-optimized-routines
      uses: actions/cache@v3
      with:
        path: aosp/external/arm-optimized-routines
        key: external_arm-optimized-routines@${{ env.branch }}
        restore-keys: external_arm-optimized-routines@${{ env.branch }}
    - name: Restore Cache external/scudo
      id: external_scudo
      uses: actions/cache@v3
      with:
        path: aosp/external/scudo
        key: external_scudo@${{ env.branch }}
        restore-keys: external_scudo@${{ env.branch }}
    - name: Clone project external/scudo
      if: steps.external_scudo.outputs.cache-hit != 'true'
      run: |
        source $GITHUB_WORKSPACE/envsetup.sh
        clone_depth_platform external/scudo
    - name: Clone project external/arm-optimized-routines
      if: steps.external_arm-optimized-routines.outputs.cache-hit != 'true'
      run: |
        source $GITHUB_WORKSPACE/envsetup.sh
        clone_depth_platform external/arm-optimized-routines
    - name: Restore Cache external/rust/crates/bitflags
      id: external_rust_crates_bitflags
      uses: actions/cache@v3
      with:
        path: aosp/external/rust/crates/bitflags
        key: external_rust_crates_bitflags@${{ env.branch }}
        restore-keys: external_rust_crates_bitflags@${{ env.branch }}
    - name: Clone project external/rust/crates/bitflags
      if: steps.external_rust_crates_bitflags.outputs.cache-hit != 'true'
      run: |
        source $GITHUB_WORKSPACE/envsetup.sh
        clone_depth_platform external/rust/crates/bitflags
    - name: Start Soong
      run: |
        pushd aosp
        export TOP=$(pwd)
        GOROOT=$TOP/prebuilts/go/linux-x86 $GITHUB_WORKSPACE/soong_ui --make-mode --skip-soong-tests --skip-write-modules -j1 TARGET_PRODUCT=aosp_x86_64 TARGET_BUILD_VARIANT=eng ALLOW_MISSING_DEPENDENCIES=true BUILD_BROKEN_DISABLE_BAZEL=1 nothing
        $GITHUB_WORKSPACE/steps/build_step0.sh
    - name: Build Step-0
      run: |
        pushd aosp
        ls -l $(pwd)
        bash $GITHUB_WORKSPACE/steps/genout0.sh
    - name: Archive soong-ninja
      uses: actions/upload-artifact@v3
      with:
        name: soong-ninja
        path: aosp/out/soong/ninja
    - name: Archive external_arm-optimized-routines-0
      uses: actions/upload-artifact@v3
      with:
        name: external_arm-optimized-routines-0
        path: aosp/prebuiltlibs/external/arm-optimized-routines
    - name: Archive external_gwp_asan-0
      uses: actions/upload-artifact@v3
      with:
        name: external_gwp_asan-0
        path: aosp/prebuiltlibs/external/gwp_asan
    - name: Archive external_rust_crates_bitflags-0
      uses: actions/upload-artifact@v3
      with:
        name: external_rust_crates_bitflags-0
        path: aosp/prebuiltlibs/external/rust/crates/bitflags
